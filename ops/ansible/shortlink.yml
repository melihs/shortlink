- name: Configure webserver with Nginx
  hosts: gateway
  become: True
  vars:
    key_file: /etc/nginx/ssl/nginx.key
    cert_file: /etc/nginx/ssl/nginx.crt
    conf_file: /etc/nginx/conf.d/ui-nuxt-ssl.local
    server_name: localhost
  tasks:
    - name: install nginx
      apt:
        name: nginx
        state: latest
        update_cache: yes
        cache_valid_time: 3600

    - name: copy nginx config file
      synchronize:
        src: ../docker-compose/gateway/nginx # Copy from remote directory for easy sync configuration for difficult platform
        dest: /etc/
        rsync_opts:
          - "--exclude=shortlink.local"
      notify: restart nginx

    - name: copy TLS key
      copy:
        src: files/nginx.key
        dest: "{{ key_file }}"
        owner: root
        mode: "0600"
      notify: restart nginx

    - name: copy TLS certificate
      copy:
        src: files/nginx.crt
        dest: "{{ cert_file }}"
      notify: restart nginx

    - name: copy nginx config file for TLS
      template:
        src: templates/ui-nuxt-ssl.local.j2
        dest: "{{ conf_file }}"
      notify: restart nginx

    - name: delete nginx preset
      file:
        state: absent
        path: /var/log/nginx/access.log # TODO: Fix `nginx: [emerg] open() "/dev/stdout" failed (6: No such device or address)`
      notify: restart nginx

    - name: create a `nginx` user
      user:
        name: nginx
        shell: /bin/bash
        password: "{{ 'user_password' | password_hash('sha512') }}"
        groups:
          - www-data
          - sudo

    - name: add `shortlink` service
      lineinfile:
        dest: /etc/hosts
        regexp: '.*shortlink$'
        line: "127.0.0.1 shortlink"
        state: present

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: reloaded
