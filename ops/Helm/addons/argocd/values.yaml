# Common default values for argo-cd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Ref: https://github.com/argoproj/argo-cd

argo:
  enabled: true

argo-cd:
  fullnameOverride: argocd

  global:
    logging:
      format: json

  controller:
    metrics:
      enabled: true
      applicationLabels:
        enabled: true
      serviceMonitor:
        enabled: true
    rules:
      enabled: true
      spec:
        - alert: ArgoAppMissing
          expr: |
            absent(argocd_app_info)
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: "[Argo CD] No reported applications"
            description: >
              Argo CD has not reported any applications data for the past 15 minutes which
              means that it must be down or not functioning properly.  This needs to be
              resolved for this cloud to continue to maintain state.
        - alert: ArgoAppNotSynced
          expr: |
            argocd_app_info{sync_status!="Synced"} == 1
          for: 12h
          labels:
            severity: warning
          annotations:
            summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
            description: >
             The application [{{`{{$labels.name}}`}} has not been synchronized for over
              12 hours which means that the state of this cloud has drifted away from the
              state inside Git.

  dex:
    enabled: true

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  redis:
    enabled: false

  externalRedis:
    host: shortlink-redis-master.redis

  server:
    extraArgs:
      - --rootpath
      - /argo/cd
      - --basehref
      - /argo/cd

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

    ingress:
      enabled: true

      ingressClassName: nginx

      annotations:
        cert-manager.io/cluster-issuer: cert-manager-production
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        nginx.ingress.kubernetes.io/configuration-snippet: |-
          proxy_ssl_server_name on;
          proxy_ssl_name $host;
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/secure-backends: "true"
        nginx.ingress.kubernetes.io/enable-modsecurity: "true"
        nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
        nginx.ingress.kubernetes.io/enable-opentracing: "true"

      hosts:
        - shortlink.best

      paths:
        - /argo/cd(/|$)(.*)

      tls:
        - secretName: shortlink-ingress-tls
          hosts:
            - shortlink.best

      https: true

    config:
      url: https://shortlink.best/argocd

    configAnnotations: {}

    rbacConfig:
      policy.csv: |
        p, role:org-admin, applications, *, */*, allow
        p, role:org-admin, clusters, get, *, allow
        p, role:org-admin, repositories, get, *, allow
        p, role:org-admin, repositories, create, *, allow
        p, role:org-admin, repositories, update, *, allow
        p, role:org-admin, repositories, delete, *, allow
        g, devops, role:admin
        g, gitlab, role:org-admin
      policy.default: role:readonly

    extensions:
      enabled: true

  repoServer:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

    volumes:
      - name: custom-tools
        emptyDir: {}

  applicationSet:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  notifications:
    argocdUrl: https://shortlink.best/argocd

    secret:
      items:
        slack-token: <SECRET>

    notifiers:
      service.slack: |
        token: $slack-token
        username: argocd # optional username
        icon: :dart: # optional icon for the message (supports both emoij and url notation)

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  configs:
    repositories:
      shortlink:
        url: https://github.com/batazor/shortlink
        name: shortlink
        type: git

argo-events:
  fullnameOverride: argo-events

argo-workflows:
  fullnameOverride: argo-workflows

  controller:
    metricsConfig:
      enabled: true
    telemetryConfig:
      enabled: true
    serviceMonitor:
      enabled: true

    workflowNamespaces:
      - shortlink

    # -- enable persistence using postgres
    # postgresql:
    #  host: localhost
    #  port: 5432
    #  database: argo
    #  tableName: argo_workflows

  server:
    extraArgs:
      - --basehref
      - /argo/workflows/
      - --auth-mode=server

    extraEnv:
      - name: BASE_HREF
        value: /argo/workflows
      - name: ARGO_BASE_HREF
        value: /argo/workflows

    ingress:
      enabled: true

      ingressClassName: nginx

      annotations:
        cert-manager.io/cluster-issuer: cert-manager-production
        nginx.ingress.kubernetes.io/backend-protocol: HTTP
        nginx.ingress.kubernetes.io/enable-modsecurity: "true"
        nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
        nginx.ingress.kubernetes.io/enable-opentracing: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/use-regex: "true"

      hosts:
        - shortlink.best

      paths:
        - /argo/workflows/?(.*)

      tls:
        - secretName: shortlink-ingress-tls
          hosts:
            - shortlink.best

argocd-apps:
  # -- Deploy Argo CD Applications within this helm release
  # @default -- `[]` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  applications: [ ]

  # -- Deploy Argo CD Projects within this helm release
  # @default -- `[]` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  projects: [ ]

argo-rollouts:
  fullnameOverride: argo-rollouts

  dashboard:
    enabled: true

    ingress:
      enabled: true

      ingressClassName: nginx

      annotations:
        cert-manager.io/cluster-issuer: cert-manager-production
        nginx.ingress.kubernetes.io/backend-protocol: HTTP
        nginx.ingress.kubernetes.io/enable-modsecurity: "true"
        nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
        nginx.ingress.kubernetes.io/enable-opentracing: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/use-regex: "true"

      hosts:
        - shortlink.best

      paths:
        - /argo/dashboard?(.*)

      tls:
        - secretName: shortlink-ingress-tls
          hosts:
            - shortlink.best

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

argocd-image-updater:
  fullnameOverride: argocd-image-updater

  updateStrategy:
    type: Recreate

  registries:
    - name: GitLab
      api_url: https://registry.gitlab.com
      ping: yes
      default: true

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
