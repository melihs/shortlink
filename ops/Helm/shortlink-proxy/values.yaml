# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: shortlink

# ==============================================================================
# This secret for dev-stand. For production use CI-variables
secret:
  enabled: false
  grpcServerCert: |
    -----BEGIN CERTIFICATE-----
    Your cert...
    -----END CERTIFICATE-----
  grpcServerKey: |
    -----BEGIN EC PRIVATE KEY-----
    Your key...
    -----END EC PRIVATE KEY-----
  grpcIntermediateCA: |
    -----BEGIN CERTIFICATE-----
    Your CA...
    -----END CERTIFICATE-----

# ==============================================================================
enabled: true

host: shortlink.ddns.net

ingress:
  enabled: false
  # type ingress-controller: nginx
  type: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/enable-opentracing: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"

  tls:
    - secretName: shortlink-ingress-tls
      hosts:
        - shortlink.ddns.net

# ==============================================================================
deploy:
  replicaCount: 1

  env:
    MQ_ENABLED: "false"
    MQ_TYPE: "rabbitmq"
    MQ_RABBIT_URI: "amqp://admin:admin@rabbitmq.rabbitmq:5672"
    TRACER_URI: jaeger-agent.jaeger-operator:6831
    API_LINK_SERVICE: http://api-shortlink-api.shortlink:7070
    GRPC_CLIENT_HOST: istio-ingressgateway.istio-system
    GRPC_CLIENT_TLS_ENABLED: false
    GRPC_SERVER_TLS_ENABLED: false

    # default store config
    STORE_POSTGRES_URI: postgres://postgres:shortlink@postgres-postgresql.postgres:5432/shortlink?sslmode=disable

  imagePullSecrets: []

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  terminationGracePeriodSeconds: 90

  ## Annotations to be added to controller pods
  ##
  annotations: {}

  image:
    repository: batazor/shortlink-proxy
    tag: latest
    ## Global imagePullPolicy
    ## Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
    ## Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent

  ## Node labels and tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: []
  #  shortlink: "true"
  tolerations: []

  affinity: []

  # define a liveness probe that checks every 5 seconds, starting after 5 seconds
  livenessProbe:
    httpGet:
      path: /ready
      port: 3030
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 1

  # define a readiness probe that checks every 5 seconds, starting after 5 seconds
  readinessProbe:
    httpGet:
      path: /ready
      port: 3030
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 30

  # volumes:
  #  hostPath: /data/carenda/upload

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 1024Mi
    requests:
      cpu: 10m
      memory: 64Mi

  podSecurityContext:
    # fsGroup is the group ID associated with the container
    fsGroup: 1000

  ## Security Context policies for controller pods
  ## See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
  ## notes on enabling and using sysctls
  ##
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    # runAsUser is the user ID used to run the container
    runAsUser: 1000
    # runAsGroup is the primary group ID used to run all processes within any container of the pod
    runAsGroup: 1000
    # readOnlyRootFilesystem is a flag to enable readOnlyRootFilesystem for the Hazelcast security context
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

service:
  type: ClusterIP
  port: 3030
  # nodePort: 7070
  # clusterIP: 172.0.0.1
