apiVersion: apps/v1
kind: {{ .Values.deploy.type | default "Deployment" }}
metadata:
  {{- include "shortlink-common.metadata" . | indent 2 }}
spec:
  replicas: {{ .Values.deploy.replicaCount }}
  strategy:
    {{- toYaml .Values.deploy.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "shortlink-common.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "shortlink-common.matchLabels" . | indent 8 }}
      annotations:
      {{- if .Values.deploy.annotations }}
        {{- toYaml .Values.deploy.annotations | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.deploy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "helpers.serviceAccountName" . }}
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          capabilities:
            drop:
              - NET_RAW
          runAsNonRoot: true
        image: "{{ .Values.deploy.image.repository }}:{{ .Values.deploy.image.tag }}"
        imagePullPolicy: {{ .Values.deploy.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        {{- include "shortlink-common.probe" .Values.deploy | indent 6 }}
        env:
          {{- range $key, $value := .Values.deploy.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
        resources:
          {{- toYaml .Values.deploy.resources | nindent 10 }}
      {{- with .Values.deploy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.deploy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.deploy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
