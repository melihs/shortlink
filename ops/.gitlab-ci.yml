include:
  - local: /ops/templates/job_template_build.yml
  - local: /ops/templates/job_teplate_go.yml
  - local: /ops/environments/yandex.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: Verify/Browser-Performance.gitlab-ci.yml

stages:
  - test
  - build
  - deploy
  - accessibility
  - release

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  PRODUCTION_UI_HOST: https://shortlink.surge.sh
  STAGING_UI_HOST: https://staging_shortlink.surge.sh

# DEFAULT ==============================================================================================================
default:
  services:
    - name: docker:19.03-dind
      alias: localhost # necessary for correct addressing to services running in docker

# ON COMMIT ============================================================================================================
golint:
  extends:
    - .job_teplate_go
  image: golangci/golangci-lint:v1.24.0
  script:
    - make golint

gosec:
  extends:
    - .job_teplate_go
  before_script:
    - go get -u github.com/securego/gosec/cmd/gosec
  script:
    - make gosec

gotest:
  extends:
    - .job_teplate_go
  script:
    - make test

# BUILD IMAGE ==========================================================================================================
build:shortlink:
  extends:
    - .job_template_build
  variables:
    REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/shortlink
    DOCKERFILE_PATH: ops/dockerfile/shortlink.Dockerfile
  script:
    - docker build -t ${REGISTRY_IMAGE}:${CI_COMMIT_TAG} -f ${DOCKERFILE_PATH} .
    - docker push ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  needs:
    - golint
    - gosec
    - gotest

build:logger:
  extends:
    - .job_template_build
  variables:
    REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/logger
    DOCKERFILE_PATH: ops/dockerfile/logger.Dockerfile
  script:
    - docker build -t ${REGISTRY_IMAGE}:${CI_COMMIT_TAG} -f ${DOCKERFILE_PATH} .
    - docker push ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  needs:
    - golint
    - gosec
    - gotest

build:ui:
  extends:
    - .job_template_build
  variables:
    REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/ui-nuxt
    DOCKERFILE_PATH: ops/dockerfile/ui-nuxt.Dockerfile
  script:
    - docker build -t ${REGISTRY_IMAGE}:${CI_COMMIT_TAG} -f ${DOCKERFILE_PATH} .
    - docker push ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  needs:
    - golint
    - gosec
    - gotest

# OTHER ================================================================================================================

# Read more about the feature here: https://docs.gitlab.com/ee/user/project/merge_requests/accessibility_testing.html
a11y:
  stage: accessibility
  image: node
  script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - apt-get update
    - apt-get install -y google-chrome-stable
    - rm -rf /var/lib/apt/lists/*
    - npm install pa11y@5.3.0 pa11y-reporter-html@1.0.0
    - './node_modules/.bin/pa11y $PRODUCTION_UI_HOST > accessibility.html'
    - echo 'Complete!!!'
  artifacts:
    when: always
    expose_as: 'accessibility'
    paths: ['accessibility.html']

# Read more about this feature here: https://docs.gitlab.com/ee/user/application_security/license_compliance/
license_scanning:
  only:
    refs:
      - branches
      - tags

performance:
  stage: accessibility
  variables:
    URL: $PRODUCTION_UI_HOST

# TEST
helm:
  image:
    name: alpine/helm:3.1.2
    entrypoint: [""]
  before_script:
    - env
  script:
    - ls /tmp/config
    - helm --kubeconfig=${KUBECONFIG} ls
