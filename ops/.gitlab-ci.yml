.job_template_build: &job_build
  type: build
  image: gitlab/dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  when: on_success
  retry: 2
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.?(?:0|[1-9]\d*)?$/
  except:
    - branches

.job_template_deploy: &job_deploy
  type: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - helm --kube-context $KUBE_CONTEXT upgrade $RELEASE_NAME $HELM_PATH
      --install
      --force
      --wait
      --namespace=$PROJECT_NAMESPACE
      --set CI_PROJECT_NAME=$CI_PROJECT_NAME;
  except:
    - branches
  when: manual

.job_teplate_go: &job_go
  type: test
  image: golang:1.14-buster
  only:
    refs:
      - tags
    changes:
      - "*.go"
      - "**/*.go"

services:
  - name: docker:19.03-dind
    alias: localhost # necessary for correct addressing to services running in docker

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  PROJECT_NAMESPACE: shortlink
  PRODUCTION_HOST: "https://shortlink.surge.sh/" # https://docs.gitlab.com/ee/user/project/merge_requests/accessibility_testing.html#configure-accessibility-testing

include:
  - template: License-Scanning.gitlab-ci.yml

stages:
  - test
  - build
  - deploy
  - accessibility
  - release

# ON COMMIT ============================================================================================================
golint:
  <<: *job_go
  image: golangci/golangci-lint:v1.23.6
  script:
    - make golint

gosec:
  <<: *job_go
  before_script:
    - go get -u github.com/securego/gosec/cmd/gosec
  script:
    - make gosec

gotest:
  <<: *job_go
  script:
    - make test

# BUILD IMAGE ==========================================================================================================
build:shortlink:
  <<: *job_build
  variables:
    REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/shortlink
    DOCKERFILE_PATH: ops/dockerfile/shortlink.Dockerfile
  script:
    - docker build -t ${REGISTRY_IMAGE}:${CI_COMMIT_TAG} -f ${DOCKERFILE_PATH} .
    - docker push ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}

build:logger:
  <<: *job_build
  variables:
    REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/logger
    DOCKERFILE_PATH: ops/dockerfile/logger.Dockerfile
  script:
    - docker build -t ${REGISTRY_IMAGE}:${CI_COMMIT_TAG} -f ${DOCKERFILE_PATH} .
    - docker push ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}

build:ui:
  <<: *job_build
  variables:
    REGISTRY_IMAGE: $CI_REGISTRY_IMAGE/ui-nuxt
    DOCKERFILE_PATH: ops/dockerfile/ui-nuxt.Dockerfile
  script:
    - docker build -t ${REGISTRY_IMAGE}:${CI_COMMIT_TAG} -f ${DOCKERFILE_PATH} .
    - docker push ${REGISTRY_IMAGE}:${CI_COMMIT_TAG}

# STAGING RELEASE ======================================================================================================

deploy:staging:
  <<: *job_deploy
  variables:
    KUBE_CONTEXT: production
    RELEASE_NAME: $CI_PROJECT_NAME
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}
  environment:
    name: staging
    url: stage.example.com
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/

# PRODUCTION RELEASE ===================================================================================================

deploy:production:
  <<: *job_deploy
  variables:
    KUBE_CONTEXT: production
    RELEASE_NAME: $CI_PROJECT_NAME
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}
  environment:
    name: production
    url: prod.example.com
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.?(?:0|[1-9]\d*)?$/

# OTHER ================================================================================================================

# Read more about the feature here: https://docs.gitlab.com/ee/user/project/merge_requests/accessibility_testing.html
a11y:
  stage: accessibility
  image: node
  script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list && \
    - apt-get update && \
    - apt-get install -y google-chrome-stable && \
    - rm -rf /var/lib/apt/lists/*
    - npm install pa11y@5.3.0 pa11y-reporter-html@1.0.0
    - './node_modules/.bin/pa11y $PRODUCTION_HOST > accessibility.html'
  artifacts:
    when: always
    expose_as: 'accessibility'
    paths: ['accessibility.html']
  rules:
    - if: $PRODUCTION_HOST
