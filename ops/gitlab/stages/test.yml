include:
  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/License-Scanning.gitlab-ci.yml
  - template: Jobs/License-Scanning.gitlab-ci.yml

# GOLANG ===============================================================================================================
GOLANG:
  stage: test
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/test/golang.yml'
    strategy: depend
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_TAG
      when: on_success

# DEPENDENCY ===========================================================================================================
DEPENDENCY:
  stage: test
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/test/dependency.yml'
    strategy: depend
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_TAG
      when: on_success

# HELM =================================================================================================================
HELM:
  stage: test
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/test/helm.yml'
    strategy: depend
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - changes:
        - ops/Helm/*/*
    - if: $CI_COMMIT_TAG
      when: on_success

# LICENSE ==============================================================================================================
# Read more about this feature here: https://docs.gitlab.com/ee/user/application_security/license_compliance/
license_scanning:
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_TAG
      when: on_success

# DANGER ===============================================================================================================
# TODO: fix
danger-review:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:danger
  stage: test
  variables:
    DANGER_GITLAB_API_TOKEN: $GITLAB_TOKEN
  script:
    - git version
    - danger --dangerfile=ops/danger/Dangerfile
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_TAG
      when: on_success
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

# SECRET-DETECTION =====================================================================================================
secret_detection:
  stage: test
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/test/secret.yml'
    strategy: depend
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
      when: on_success

# SAST =================================================================================================================
SAST:
  stage: test
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/test/sast.yml'
    strategy: depend
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_TAG
      when: on_success

# LANDINGS =============================================================================================================

ui:landing:
  stage: test
  image: cypress/browsers:node-18.14.1-chrome-111.0.5563.64-1-ff-111.0-edge-111.0.1661.43-1
  before_script:
    - cd ./ui/landing
  script:
    # install dependencies
    - npm ci
    # start the server in the background
    - npm run dev &
    # run Cypress tests
    - npm run cypress:headless
  artifacts:
    when: always
    paths:
      - ./ui/landing/cypress/videos/**/*.mp4
      - ./ui/landing/cypress/screenshots/**/*.png
    expire_in: 1 day
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .npm/
  needs: []
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
