# STAGING RELEASE ======================================================================================================
api-staging:
  stage: .pre
  variables:
    RELEASE_NAME: ${CI_PROJECT_NAME}-api
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}-api
    REGISTRY: ${CI_REGISTRY_IMAGE}/api
    HELM_ARG: '--set deploy.annotations.app\.gitlab\.com\/env=$ENVIRONMENT_NAME --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/deploy.yml'
    strategy: depend
  needs:
    - trigger:build_api
    - helm-lint-chart
    - helm-run-chart
#  rules:
#    - if: $CI_COMMIT_TAG
#      when: on_success

logger-staging:
  stage: deploy
  variables:
    RELEASE_NAME: ${CI_PROJECT_NAME}-logger
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}-logger
    REGISTRY: ${CI_REGISTRY_IMAGE}/logger
    HELM_ARG: '--set serviceAccount.create=false --set deploy.annotations.app\.gitlab\.com\/env=$ENVIRONMENT_NAME --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/deploy.yml'
    strategy: depend
  needs:
    - trigger:build_logger
    - helm-lint-chart
    - helm-run-chart
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success

ui-staging:
  stage: deploy
  variables:
    RELEASE_NAME: ${CI_PROJECT_NAME}-ui
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}-ui
    REGISTRY: ${CI_REGISTRY_IMAGE}/ui-nuxt
    HELM_ARG: '--set serviceAccount.create=false --set deploy.annotations.app\.gitlab\.com\/env=$ENVIRONMENT_NAME --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/ui.yml'
    strategy: depend
  needs:
    - trigger:build_ui
    - helm-lint-chart
    - helm-run-chart
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
