version: '2.4'

x-network: &network
  networks:
    - simple
  dns:
    - ${DNS_IP}
  dns_search: ${DNS_SEARCH}

services:

  postgres:
    <<: *network
    depends_on:
      - coredns
    image: postgres:13-alpine
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    profiles:
      - postgres
    init: true
    restart: on-failure
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: shortlink
      POSTGRES_DB: shortlink
    networks:
      simple:
        ipv4_address: ${DATABASE_IP}
    healthcheck:
      test: [ "CMD", "pg_isready", "--username=postgres", "--host=127.0.0.1", "--port=5432" ]
      interval: 2s
      timeout: 1m
      retries: 5
    volumes:
      - ./ops/docker-compose/database/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
#    logging:
#      driver: fluent-bit
#      options:
#        tag: postgres

  pgbouncer:
    <<: *network
    depends_on:
      - postgres
      - coredns
    image: docker.io/bitnami/pgbouncer:1
    profiles:
      - postgres
    ports:
      - 6432:6432
    environment:
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PASSWORD=shortlink
      - POSTGRESQL_DATABASE=shortlink
      - PGBOUNCER_DATABASE=shortlink
    volumes:
      - ./ops/docker-compose/database/postgres/pgbouncer.ini:/bitnami/pgbouncer/conf/pgbouncer.ini

  postgres-exporter:
    <<: *network
    depends_on:
      - postgres
      - coredns
    image: quay.io/prometheuscommunity/postgres-exporter:v0.10.0
    profiles:
      - prometheus
    restart: on-failure
    container_name: postgres-exporter
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:shortlink@postgres:5432/shortlink?sslmode=disable
      - PG_EXPORTER_AUTO_DISCOVER_DATABASES=true

  prometheus:
    image: prom/prometheus:v2.29.1
    profiles:
      - prometheus
    volumes:
      - ./ops/docker-compose/database/postgres/postgres-server.json:/etc/prometheus/targets/postgres-server.json
