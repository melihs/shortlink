env:
  browser: true
  node: true
  es2020: true
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: 2020
  sourceType: "module"
  ecmaFeatures:
    jsx: true
plugins:
  - '@typescript-eslint'
  - 'react'
  - 'prettier'
extends:
  - eslint:recommended
  - plugin:react/recommended
  - airbnb
  - airbnb/hooks
  - plugin:@typescript-eslint/recommended
  - plugin:react/recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/typescript
  - prettier
rules:
  semi: ["error", "never"]
  react/jsx-filename-extension: [1, { extensions: [".ts", ".tsx"] }]
  react/jsx-fragments: [1, 'element']
  import/extensions: off
  react/prop-types: off
  jsx-a11y/anchor-is-valid: off
  react/jsx-props-no-spreading: ["error", { custom: "ignore" }]
  prettier/prettier: error
  react/no-unescaped-entities: off
  import/no-cycle: [0, { ignoreExternal: true }]
  prefer-const: off
  # needed because of https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md#how-to-use & https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined
  no-use-before-define: off
  import/namespace: off
  import/no-unresolved: off
  import/no-duplicates: off
  'jsx-a11y/label-has-associated-control': off
  react/display-name: off
  '@typescript-eslint/no-use-before-define': ["error", {functions: false, classes: false, variables: true}]
  '@typescript-eslint/ban-ts-comment': off
  react/react-in-jsx-scope: off
settings:
  import/resolver:
    babel-module:
      extensions: [".js", ".jsx", ".ts", ".tsx"]
    node:
      extensions: [".js", ".jsx", ".ts", ".tsx"]
      paths: ["server"]
