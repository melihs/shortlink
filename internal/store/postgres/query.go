// Code generated by protoc-gen-gotemplate. DO NOT EDIT.
// source: pkg/link/link.proto

package postgres

import (
	"github.com/Masterminds/squirrel"

	"github.com/batazor/shortlink/internal/store/query"
)

func (p *PostgresLinkList) buildFilter(filter *query.Filter) interface{} {
	if filter != nil {
		clauses := squirrel.Eq{}

		if filter.Url != nil {
			if filter.Url.Eq != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.NotEq != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.Lt != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.LtOrEq != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.Gt != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.GtOrEq != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.Like != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Url != nil {
			if filter.Url.NotLike != nil {
				clauses["url"] = filter.Url.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.Eq != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.NotEq != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.Lt != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.LtOrEq != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.Gt != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.GtOrEq != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.Like != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Hash != nil {
			if filter.Hash.NotLike != nil {
				clauses["hash"] = filter.Hash.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.Eq != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.NotEq != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.Lt != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.LtOrEq != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.Gt != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.GtOrEq != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.Like != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		if filter.Describe != nil {
			if filter.Describe.NotLike != nil {
				clauses["describe"] = filter.Describe.Eq
			}
		}

		return clauses
	}

	return nil
}
