---
# Source: shortlink-landing/templates/base.yaml
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-shortlink-landing
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  podSelector:
    matchLabels:      
      app.kubernetes.io/name: shortlink-landing
      app.kubernetes.io/instance: test
  egress:
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
      - podSelector:
          matchLabels:
              app.kubernetes.io/name: nginx-ingress
      ports:
        - port: 8080
          protocol: TCP
  policyTypes:
    - Ingress
---
# Source: shortlink-landing/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-shortlink-landing
  labels: 
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
  annotations:
automountServiceAccountToken: false
---
# Source: shortlink-landing/templates/base.yaml
apiVersion: v1
kind: Service
metadata:  
    name: test-shortlink-landing
    labels:
      app.kubernetes.io/name: shortlink-landing
      helm.sh/chart: shortlink-landing-0.7.2
      app.kubernetes.io/instance: test
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/version: "1.0.0"
      app.kubernetes.io/part-of: shortlink
      track: stable
spec:
  type: ClusterIP
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
  selector:    
    app.kubernetes.io/name: shortlink-landing
    app.kubernetes.io/instance: test
---
# Source: shortlink-landing/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-shortlink-landing
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:      
      app.kubernetes.io/name: shortlink-landing
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shortlink-landing
        helm.sh/chart: shortlink-landing-0.7.2
        app.kubernetes.io/instance: test
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/part-of: shortlink
        track: stable
    spec:
      terminationGracePeriodSeconds: 60
      automountServiceAccountToken: true
      serviceAccountName: test-shortlink-landing
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:      
      - name: application
        # -- Security Context policies for controller pods
        # See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
        # notes on enabling and using sysctls
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          # runAsUser is the user ID used to run the container
          runAsUser: 1000
          # runAsGroup is the primary group ID used to run all processes within any container of the pod
          runAsGroup: 1000
          # readOnlyRootFilesystem is a flag to enable readOnlyRootFilesystem for the Hazelcast security context
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        image: "registry.gitlab.com/shortlink-org/shortlink/landing:0.16.16"
        # -- Global imagePullPolicy
        # Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
        # Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
        imagePullPolicy: Always
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        # -- define a liveness probe that checks every 5 seconds, starting after 5 seconds
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          terminationGracePeriodSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 5
        # -- define a readiness probe that checks every 5 seconds, starting after 5 seconds
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 30
          timeoutSeconds: 5
        env:
        resources:
          # -- We usually recommend not specifying default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        
        volumeMounts:
          - name: test-shortlink-landing-tmp
            mountPath: "/tmp"
            readOnly: false
      # -- Node labels and tolerations for pod assignment
      # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature    
      volumes:
        - name: test-shortlink-landing-tmp
          emptyDir: { }
---
# Source: shortlink-landing/templates/base.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-shortlink-landing
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
  annotations:
    
    
    
    

    
    
    
    
    
    
    
    
    

    
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-opentelemetry: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: shortlink.best
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: shortlink-landing
                port:
                  number: 8080
---
# Source: shortlink-landing/templates/base.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: test-shortlink-landing
  labels:
    release: prometheus-operator
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: shortlink-landing
      app.kubernetes.io/instance: test
  namespaceSelector:
    matchNames:
      - default
  endpoints:
    - port: metrics
---
# Source: shortlink-landing/templates/test/e2e/browser_main_page.yaml
apiVersion: tests.testkube.io/v3
kind: Test
metadata:
  name: shortlink-landing-k6-browser-main-page
  namespace: testkube
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  type: k6/script
  content:
    type: git-dir
    repository:
      type: git
      uri: https://github.com/shortlink-org/shortlink.git
      branch: main
      path: ui/nx-monorepo/packages/landing/test/e2e
  executionRequest:
    activeDeadlineSeconds: 60
    variables:
      K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM:
        name: K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM
        value: "true"
        type: basic
      K6_PROMETHEUS_RW_SERVER_URL:
        name: K6_PROMETHEUS_RW_SERVER_URL
        value: "http://prometheus-prometheus.prometheus-operator:9090"
        type: basic
      K6_PROJECT_ID:
        name: K6_PROJECT_ID
        valueFrom:
          secretKeyRef:
            name: secret-env
            key: K6_PROJECT_ID
        type: secret
      K6_OUT:
        name: K6_OUT
        value: "experimental-prometheus-rw"
        type: basic
      TARGET_HOSTNAME:
        name: TARGET_HOSTNAME
        value: "https://shortlink.best"
        type: basic
    args:
      - k6_browser_main_page.js
---
# Source: shortlink-landing/templates/test/e2e/cypress_main_page.yaml
apiVersion: tests.testkube.io/v3
kind: Test
metadata:
  name: shortlink-landing-cypress-main-page
  namespace: testkube
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  type: cypress/project
  content:
    type: git-dir
    repository:
      type: git
      uri: https://github.com/shortlink-org/shortlink.git
      branch: main
      path: ui/nx-monorepo/packages/landing
  executionRequest:
    activeDeadlineSeconds: 300
    variables:
      CYPRESS_BASE_URL:
        name: CYPRESS_BASE_URL
        value: "https://shortlink.best"
        type: basic
      CYPRESS_PROJECT_ID:
        name: K6_PROJECT_ID
        valueFrom:
          secretKeyRef:
            name: secret-env
            key: CYPRESS_PROJECT_ID
        type: secret
      CYPRESS_PROJECT_KEY:
        name: K6_PROJECT_ID
        valueFrom:
          secretKeyRef:
            name: secret-env
            key: CYPRESS_PROJECT_KEY
        type: secret
    args:
      - "--env"
      - "NON_CYPRESS_ENV=NON_CYPRESS_ENV_value"
---
# Source: shortlink-landing/templates/test/e2e/k6_main_page.yaml
apiVersion: tests.testkube.io/v3
kind: Test
metadata:
  name: shortlink-landing-k6-http-main-page
  namespace: testkube
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  type: k6/script
  content:
    type: git-dir
    repository:
      type: git
      uri: https://github.com/shortlink-org/shortlink.git
      branch: main
      path: ui/nx-monorepo/packages/landing/test/e2e
  executionRequest:
    activeDeadlineSeconds: 60
    variables:
      K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM:
        name: K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM
        value: "true"
        type: basic
      K6_PROMETHEUS_RW_SERVER_URL:
        name: K6_PROMETHEUS_RW_SERVER_URL
        value: "http://prometheus-prometheus.prometheus-operator:9090"
        type: basic
      K6_PROJECT_ID:
        name: K6_PROJECT_ID
        valueFrom:
          secretKeyRef:
            name: secret-env
            key: K6_PROJECT_ID
        type: secret
      K6_OUT:
        name: K6_OUT
        value: "experimental-prometheus-rw"
        type: basic
      TARGET_HOSTNAME:
        name: TARGET_HOSTNAME
        value: "https://shortlink.best"
        type: basic
    args:
      - k6_http_main_page.js
---
# Source: shortlink-landing/templates/test/e2e/test_suites.yaml
apiVersion: tests.testkube.io/v1
kind: TestSuite
metadata:
  name: shortlink-landing
  namespace: testkube
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  description: Test suite for shortlink landing page
  steps:
    - execute:
        name: shortlink-landing-cypress-main-page
        namespace: testkube
    - execute:
        name: shortlink-landing-k6-http-main-page
        namespace: testkube
    - execute:
        name: shortlink-landing-k6-browser-main-page
        namespace: testkube
---
# Source: shortlink-landing/templates/test/e2e/test_trigger.yaml
apiVersion: tests.testkube.io/v1
kind: TestTrigger
metadata:
  name: shortlink-landing
  namespace: testkube
  labels:
    app.kubernetes.io/name: shortlink-landing
    helm.sh/chart: shortlink-landing-0.7.2
    app.kubernetes.io/instance: test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: shortlink
    track: stable
spec:
  resource: deployment
  resourceSelector:
    labelSelector:
      matchLabels:        
        app.kubernetes.io/name: shortlink-landing
        app.kubernetes.io/instance: test
  event: modified
  action: run
  execution: testsuite
  testSelector:
    labelSelector:
      matchLabels:
        
        app.kubernetes.io/name: shortlink-landing
        app.kubernetes.io/instance: test
